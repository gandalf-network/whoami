// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserState {
  AWAITING_CONNECTION
  CONNECTED
  CRUNCHING_DATA
  COMPLETED
}

model User {
  id         String     @id @default(uuid())
  identifier String     @unique @db.VarChar(255)
  state      UserState  @default(AWAITING_CONNECTION)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  episodes   UserEpisode[]
}

model Episode {
  id      String     @id @default(uuid())
  season  Int?
  episode Int?
  users   UserEpisode[]
  show    Show?      @relation(fields: [showID], references: [id])
  showID  String?

  @@unique([showID, season, episode], name: "unique_show_season_episode")
}

model Show {
  id               String    @id @default(uuid())
  title            String    @unique @db.VarChar(255)
  numberOfEpisodes Int
  genre            String?   @db.VarChar(255)
  imageURL         String?   @db.VarChar(255)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  episodes         Episode[]
  actors           Actor[]
}

model UserEpisode {
  id         String    @id @default(uuid())
  userId     String  
  episodeID  String  
  datePlayed DateTime

  user    User    @relation(fields: [userId], references: [id])
  episode Episode @relation(fields: [episodeID], references: [id])
}

model Actor {
  id        String    @id @default(uuid())
  name      String    @unique @db.VarChar(255)
  imageURL  String?   @db.VarChar(255)
  shows     Show[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
