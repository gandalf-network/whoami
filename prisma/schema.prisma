// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserState {
  AWAITING_CONNECTION
  CONNECTED
  CRUNCHING_DATA
  COMPLETED
}

enum AssistantName {
  TV_BFF
  FIRST_AND_MOST_REWATCHED_SHOW_QUIPS
  TOP_GENRES_STAR_SIGN
}

model user {
  id         String     @id @default(uuid())
  identifier String     @unique @db.VarChar(255)
  state      UserState  @default(AWAITING_CONNECTION)
  episodes   userEpisode[]
  shows      userShow[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model episode {
  id      String     @id @default(uuid())
  season  Int?
  episode Int?
  showID  String?
  users   userEpisode[]
  show    show?      @relation(fields: [showID], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([showID, season, episode], name: "uniqueShowSeasonEpisode")
  @@index([showID])
}

model show {
  id                String    @id @default(uuid())
  title             String    @unique @db.VarChar(255)
  numberOfEpisodes  Int
  rottenTomatoScore Int?   
  genre             String[]   @db.VarChar(255)
  imageURL          String?   @db.VarChar(255)
  summary           String?   @db.VarChar(255)
  episodes          episode[]
  actors            actor[]
  users             userShow[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model userEpisode {
  id         String    @id @default(uuid())
  userID     String  
  episodeID  String  
  datePlayed DateTime

  user    user    @relation(fields: [userID], references: [id])
  episode episode @relation(fields: [episodeID], references: [id])

  @@index([userID])
  @@index([episodeID])
}

model userShow {
  userID     String  
  showID     String  

  user    user    @relation(fields: [userID], references: [id])
  show    show    @relation(fields: [showID], references: [id])

  @@id([userID, showID], name: "userShowID")
}

model actor {
  id        String    @id @default(uuid())
  name      String    @unique @db.VarChar(255)
  imageURL  String?   @db.VarChar(255)
  shows     show[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model assistant {
  id          String           @id @default(uuid())
  name        AssistantName    @unique
  assistantID String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@index([name])
}
